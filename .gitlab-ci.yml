image: openjdk:17-jdk-slim-bullseye

stages:
  - build
  - tests
  - sonar
  - publish

variables:
  VERSION: 1.4.0
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  # GRADLE_USER_HOME: /cache/.gradle
  CREDENTIAL_PROPERTIES: "-PmavenReleasesRepositoryUsername=$NEXUS_BOT_LOGIN -PmavenReleasesRepositoryPassword=$NEXUS_BOT_PASSWORD -PmavenSnapshotsRepositoryUsername=$NEXUS_BOT_LOGIN -PmavenSnapshotsRepositoryPassword=$NEXUS_BOT_PASSWORD"
  COMMIT_ID: ${CI_COMMIT_SHA:0:8}

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - chmod +x gradlew

classes:
  stage: build
  script:
    - ./gradlew classes $CREDENTIAL_PROPERTIES
  cache:
    key: "$CI_PIPELINE_ID"
    paths:
      - build/
      - .gradle/
    policy: push

tests:
  stage: tests
  script:
    - ./gradlew test $CREDENTIAL_PROPERTIES
  allow_failure: false
  artifacts:
    when: always
    paths:
      - build/jacocoHtml
      - build/reports
    expire_in: 60 days
    reports:
      junit: build/test-results/test/TEST-*.xml
  cache:
    key: "$CI_PIPELINE_ID"
    paths:
      - build/
      - .gradle/
    policy: pull-push

sonar:
  stage: sonar
  variables:
    SONAR_TOKEN: $SONARQUBE_BOT_API_TOKEN
    SONAR_HOST_URL: https://$SONARQUBE_HOST
  script:
    - ./gradlew sonarqube $CREDENTIAL_PROPERTIES
  allow_failure: true
  when: always
  cache:
    key: "$CI_PIPELINE_ID"
    paths:
      - build/
      - .gradle/
    policy: pull

nexus-deploy:
  stage: publish
  script:
    - ./gradlew publish $CREDENTIAL_PROPERTIES
  cache:
    key: "$CI_PIPELINE_ID"
    paths:
      - build/
      - .gradle/
    policy: push
